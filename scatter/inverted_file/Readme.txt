需求与算法如下：
1、建立一个单词表：word_list[]

	建立一个单词集合。wordset = set()

	如何划分单词？
		正则匹配：连续的字母，中间可以有引号'或者减号-。其他都不可以。


	遍历所有目录的-所有文件的-所有行，找出这样的匹配。加入到单词集合里面去。

	最后把set转换为list。

	再要做一个“单词名”到“word_list序号”的映射表，这样可以快速的由单词得到编号。



2、建一个文件名列表：file_list[]
	这样每个文件名都对应了自己在列表里的index。


3、建一个2维矩阵。matrix = numpy.matrix()
行数：word_list的长度。
列数：file_list的长度。

含义上：
	行属性是某一单词。（单词名）
	列属性是某一文件。（文件路径+名）


4、对于wordset的每个单词，计算在每个文件里的次数。

	遍历所有目录的-所有文件：
		如文件f，对所有行-每一个匹配：
			判断它在file_list[]中的编号w，然后把matrix[w][f]加1


5，matrix的每一行就是一个单词的次数表。
将每一行输出到一个文件中，以单词命名。


6，对每个单词的次数表排序。



